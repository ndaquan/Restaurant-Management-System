<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
  <style>
    .card {
      min-height: 100%;
    }
    .tilte-rest {
      padding-left: 200px;
      font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
      text-align: center;
    }
    .navbar .user-profile {
      font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
      text-align: center;
    }
</style>
</head>
<body>
  <!-- N·ªôi dung ch√≠nh -->
  <div class="container-fluid mt-4">
    <h4>Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi Dashboard!</h4>
    <div class="row mt-4 mb-4">
      <!-- üí∏ Card doanh thu h√¥m nay -->
      <div class="col-12 mb-4">
        <div class="card text-white shadow rounded-4 border-0" style="background: linear-gradient(135deg, #43cea2, #185a9d);">
          <div class="card-body d-flex justify-content-between align-items-center py-4 px-5">
            <!-- Icon minh h·ªça -->
            <div class="d-flex align-items-center">
              <i class="bi bi-cash-stack display-4 me-4"></i>
              <div>
                <h6 class="text-uppercase fw-bold mb-2" style="letter-spacing: 1px;">Doanh thu h√¥m nay</h6>
                <h1 class="display-5 fw-bold mb-0" id="dailyRevenue">0 VND</h1>
              </div>
            </div>
            <!-- S·ªë l∆∞·ª£t b√†n -->
            <div class="text-end">
              <p class="mb-0 fs-6 text-light">S·ªë l∆∞·ª£t b√†n</p>
              <h3 class="fw-bold mb-0" id="dailySessions">0</h3>
            </div>
          </div>
        </div>
      </div>

      <!-- üì¶ C√°c card th·ªëng k√™ -->
      <div class="col-md-3 mb-4">
        <div class="card shadow rounded-4 border-start border-4 border-primary">
          <div class="card-body d-flex flex-column align-items-center">
            <i class="bi bi-people-fill fs-1 text-primary mb-2"></i>
            <h2 class="fw-bold mb-1"><%= totalEmployees %></h2>
            <p class="text-muted">T·ªïng nh√¢n vi√™n</p>
          </div>
        </div>
      </div>

      <div class="col-md-3 mb-4">
        <div class="card shadow rounded-4 border-start border-4 border-success">
          <div class="card-body d-flex flex-column align-items-center">
            <i class="bi bi-grid-fill fs-1 text-success mb-2"></i>
            <h2 class="fw-bold mb-1"><%= totalTables %></h2>
            <p class="text-muted">T·ªïng s·ªë b√†n</p>
          </div>
        </div>
      </div>

      <div class="col-md-3 mb-4">
        <div class="card shadow rounded-4 border-start border-4 border-warning">
          <div class="card-body d-flex flex-column align-items-center">
            <i class="bi bi-egg-fried fs-1 text-warning mb-2"></i>
            <h2 class="fw-bold mb-1"><%= totalDishes %></h2>
            <p class="text-muted">T·ªïng m√≥n ƒÉn</p>
          </div>
        </div>
      </div>

      <div class="col-md-3 mb-4">
        <div class="card shadow rounded-4 border-start border-4 border-danger">
          <div class="card-body d-flex flex-column align-items-center">
            <i class="bi bi-box-seam fs-1 text-danger mb-2"></i>
            <h2 class="fw-bold mb-1"><%= totalIngredients %></h2>
            <p class="text-muted">T·ªïng nguy√™n li·ªáu</p>
          </div>
        </div>
      </div>
    </div>

    <!-- ü™ë T√¨nh tr·∫°ng b√†n + üçΩÔ∏è Top m√≥n ƒÉn -->
    <div class="row">
      <!-- Chart t√¨nh tr·∫°ng b√†n -->
      <div class="col-md-6 mb-4">
        <div class="card">
          <div class="card-header">T√¨nh tr·∫°ng b√†n hi·ªán t·∫°i</div>
          <div class="card-body">
            <canvas id="tableStatusChart" height="300"></canvas>
          </div>
        </div>
      </div>

      <!-- Chart top 5 m√≥n ƒÉn -->
      <div class="col-md-6 mb-4">
        <div class="card">
          <div class="card-header">Top 5 m√≥n ƒÉn ƒë∆∞·ª£c g·ªçi nhi·ªÅu nh·∫•t (30 ng√†y)</div>
          <div class="card-body">
            <canvas id="topDishesChart" height="300"></canvas>
          </div>
        </div>
      </div>
    </div>

    <!-- üìä Bi·ªÉu ƒë·ªì doanh thu th√°ng -->
    <div class="row">
      <div class="col-12">
        <div class="card">
          <div class="card-header">Doanh thu th√°ng n√†y</div>
          <div class="card-body">
            <canvas id="monthlyRevenueChart" height="250"></canvas>
          </div>
        </div>
      </div>
    </div>

  </div>  

  <!-- Bootstrap JS v√† Popper.js -->
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    async function loadTableStatusChart() {
      try {
        const response = await fetch('/admin/api/table-status');
        const data = await response.json();

        const ctx = document.getElementById('tableStatusChart').getContext('2d');
        new Chart(ctx, {
          type: 'doughnut',
          data: {
            labels: ['Tr·ªëng', 'ƒêang c√≥ kh√°ch', 'ƒê√£ ƒë·∫∑t tr∆∞·ªõc'],
            datasets: [{
              data: [data.available, data.occupied, data.reserved],
              backgroundColor: [
                'rgba(29, 233, 182, 0.8)',  // Mint
                'rgba(255, 87, 34, 0.8)',   // Deep Orange
                'rgba(255, 202, 40, 0.8)'   // Sun Yellow
              ],
              hoverBackgroundColor: [
                'rgba(29, 233, 182, 1)',
                'rgba(255, 87, 34, 1)',
                'rgba(255, 202, 40, 1)'
              ],
              borderColor: '#2c3e50',
              hoverOffset: 10,
              borderRadius: 10,
            }]
          },
          options: {
            maintainAspectRatio: false,
            responsive: true,
            plugins: {
              legend: {
                position: 'bottom',
                labels: {
                  color: '#333',
                  font: {
                    size: 14,
                    family: "'Poppins', sans-serif"
                  },
                  usePointStyle: true,
                  pointStyle: 'circle'
                }
              },
              tooltip: {
                callbacks: {
                  label: function(context) {
                    let label = context.label || '';
                    let value = context.parsed;
                    let total = context.dataset.data.reduce((a, b) => a + b, 0);
                    return `${label}: ${value} b√†n `;
                  }
                },
                backgroundColor: '#fff',
                titleColor: '#000',
                bodyColor: '#333',
                borderColor: '#ccc',
                borderWidth: 1
              }
            },
            animation: {
              animateScale: true,
              animateRotate: true
            }
          }
        });
      } catch (err) {
        console.error('L·ªói khi load chart:', err);
      }
    }

    loadTableStatusChart();
  </script>
  <script>
    async function loadTopDishesChart() {
      try {
        const response = await fetch('/admin/api/top-dishes');
        const data = await response.json();

        const labels = data.map(dish => dish.name || "Kh√¥ng x√°c ƒë·ªãnh");
        const dataset = data.map(dish => dish.totalOrdered);

        const ctx = document.getElementById('topDishesChart').getContext('2d');
        new Chart(ctx, {
          type: 'bar',
          data: {
            labels,
            datasets: [{
              label: 'S·ªë l∆∞·ª£t g·ªçi',
              data: dataset,
              backgroundColor: 'rgba(63, 81, 181, 0.7)',
              borderColor: 'rgba(63, 81, 181, 1)',
              borderWidth: 1
            }]
          },
          options: {
            indexAxis: 'x',
            responsive: true,
            plugins: {
              legend: { display: false },
              tooltip: {
                callbacks: {
                  label: function(context) {
                    const value = context.parsed.x;
                    const total = dataset.reduce((a, b) => a + b, 0);
                    const percent = ((value / total) * 100).toFixed(1);
                    return `${value} l∆∞·ª£t g·ªçi (${percent}%)`;
                  }
                }
              }
            },
            scales: {
              x: {
                beginAtZero: true
              }
            }
          }
        });
      } catch (err) {
        console.error('L·ªói khi load chart m√≥n ƒÉn:', err);
      }
    }

    loadTopDishesChart();
  </script>
  <script>
    async function loadMonthlyRevenueChart() {
      try {
        const response = await fetch('/admin/api/revenue/monthly');
        const data = await response.json();

        console.log("üìä Data doanh thu th√°ng:", data); // ‚úÖ DEBUG

        const ctx = document.getElementById('monthlyRevenueChart').getContext('2d');
        new Chart(ctx, {
          type: 'line',
          data: {
            labels: data.dailyRevenue.map(r => `Ng√†y ${r.day}`),
            datasets: [{
              label: 'Doanh thu (VND)',
              data: data.dailyRevenue.map(r => r.dailyTotal),
              fill: true,
              borderColor: 'rgba(75, 192, 192, 1)',
              backgroundColor: 'rgba(75, 192, 192, 0.2)',
              tension: 0.4
            }]
          },
          options: {
            responsive: true,
            plugins: {
              legend: { position: 'top' }
            },
            scales: {
              y: { beginAtZero: true }
            }
          }
        });
      } catch (err) {
        console.error('‚ùå L·ªói load doanh thu th√°ng:', err);
      }
    }

  loadMonthlyRevenueChart();
</script>
<script>
  async function loadDailyRevenue() {
    try {
      const response = await fetch('/admin/api/revenue/daily');
      const data = await response.json();

      document.getElementById('dailyRevenue').innerText =
        data.totalRevenue.toLocaleString("vi-VN") + " VND";
      document.getElementById('dailySessions').innerText = data.totalSessions;
    } catch (err) {
      console.error('‚ùå L·ªói load doanh thu h√¥m nay:', err);
    }
  }

  loadDailyRevenue();
  </script>
</body>
</html>


