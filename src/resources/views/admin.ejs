<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
  <!-- N·ªôi dung ch√≠nh -->
  <div class="container-fluid mt-4">
    <h4>Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi Dashboard!</h4>
    <div class="row mt-4">
      <!-- Card 1: S·ªë l∆∞·ª£ng nh√¢n vi√™n (RESMANAGER, WAITER, KITCHENSTAFF) -->
      <div class="col-md-3">
        <div class="card text-center mb-4">
          <div class="card-body">
            <h5 class="card-title"><%= totalEmployees %></h5>
            <p class="card-text text-muted">T·ªïng s·ªë nh√¢n vi√™n</p>
          </div>
        </div>
      </div>
      <!-- Card 2: S·ªë l∆∞·ª£ng b√†n -->
      <div class="col-md-3">
        <div class="card text-center mb-4">
          <div class="card-body">
            <h5 class="card-title"><%= totalTables %></h5>
            <p class="card-text text-muted">T·ªïng s·ªë b√†n</p>
          </div>
        </div>
      </div>
      <!-- Card 3: S·ªë l∆∞·ª£ng m√≥n ƒÉn -->
      <div class="col-md-3">
        <div class="card text-center mb-4">
          <div class="card-body">
            <h5 class="card-title"><%= totalDishes %></h5>
            <p class="card-text text-muted">T·ªïng s·ªë m√≥n ƒÉn</p>
          </div>
        </div>
      </div>
      <!-- Card 4: S·ªë l∆∞·ª£ng nguy√™n li·ªáu -->
      <div class="col-md-3">
        <div class="card text-center mb-4">
          <div class="card-body">
            <h5 class="card-title"><%= totalIngredients %></h5>
            <p class="card-text text-muted">T·ªïng s·ªë nguy√™n li·ªáu</p>
          </div>
        </div>
      </div>
    </div>

    <div class="row">
      <!-- Chart t√¨nh tr·∫°ng b√†n -->
      <div class="col-md-6">
        <div class="card mb-4">
          <div class="card-header">T√¨nh tr·∫°ng b√†n hi·ªán t·∫°i</div>
          <div class="card-body">
            <canvas id="tableStatusChart" width="400" height="400"></canvas>
          </div>
        </div>
      </div>

      <!-- Chart doanh thu th√°ng -->
      <div class="col-md-6">
        <div class="card mb-4">
          <div class="card-header">Doanh thu th√°ng n√†y</div>
          <div class="card-body">
            <canvas id="monthlyRevenueChart" height="400"></canvas>
          </div>
        </div>
      </div>
    </div>

    <div class="row">
      <!-- Chart top m√≥n ƒÉn -->
      <div class="col-md-6">
        <div class="card mb-4">
          <div class="card-header">Top 5 m√≥n ƒÉn ƒë∆∞·ª£c g·ªçi nhi·ªÅu nh·∫•t (30 ng√†y)</div>
          <div class="card-body">
            <canvas id="topDishesChart" height="400"></canvas>
          </div>
        </div>
      </div>

      <!-- Card doanh thu h√¥m nay -->
      <div class="col-md-6">
        <div class="card text-white bg-success mb-4">
          <div class="card-header">Doanh thu h√¥m nay</div>
          <div class="card-body">
            <h5 class="card-title" id="dailyRevenue">0 VND</h5>
            <p class="card-text">S·ªë l∆∞·ª£t b√†n: <span id="dailySessions">0</span></p>
          </div>
        </div>
      </div>
    </div>

  </div>  

  <!-- Bootstrap JS v√† Popper.js -->
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    async function loadTableStatusChart() {
      try {
        const response = await fetch('/admin/api/table-status');
        const data = await response.json();

        const ctx = document.getElementById('tableStatusChart').getContext('2d');
        new Chart(ctx, {
          type: 'doughnut',
          data: {
            labels: ['Tr·ªëng', 'ƒêang c√≥ kh√°ch', 'ƒê√£ ƒë·∫∑t tr∆∞·ªõc'],
            datasets: [{
              data: [data.available, data.occupied, data.reserved],
              backgroundColor: [
                'rgba(29, 233, 182, 0.8)',  // Mint
                'rgba(255, 87, 34, 0.8)',   // Deep Orange
                'rgba(255, 202, 40, 0.8)'   // Sun Yellow
              ],
              hoverBackgroundColor: [
                'rgba(29, 233, 182, 1)',
                'rgba(255, 87, 34, 1)',
                'rgba(255, 202, 40, 1)'
              ],
              borderColor: '#2c3e50',
              hoverOffset: 10,
              borderRadius: 10,
            }]
          },
          options: {
            maintainAspectRatio: false,
            responsive: true,
            plugins: {
              legend: {
                position: 'bottom',
                labels: {
                  color: '#333',
                  font: {
                    size: 14,
                    family: "'Poppins', sans-serif"
                  },
                  usePointStyle: true,
                  pointStyle: 'circle'
                }
              },
              tooltip: {
                callbacks: {
                  label: function(context) {
                    let label = context.label || '';
                    let value = context.parsed;
                    let total = context.dataset.data.reduce((a, b) => a + b, 0);
                    return `${label}: ${value} b√†n `;
                  }
                },
                backgroundColor: '#fff',
                titleColor: '#000',
                bodyColor: '#333',
                borderColor: '#ccc',
                borderWidth: 1
              }
            },
            animation: {
              animateScale: true,
              animateRotate: true
            }
          }
        });
      } catch (err) {
        console.error('L·ªói khi load chart:', err);
      }
    }

    loadTableStatusChart();
  </script>
  <script>
    async function loadTopDishesChart() {
      try {
        const response = await fetch('/admin/api/top-dishes');
        const data = await response.json();

        const labels = data.map(dish => dish.name || "Kh√¥ng x√°c ƒë·ªãnh");
        const dataset = data.map(dish => dish.totalOrdered);

        const ctx = document.getElementById('topDishesChart').getContext('2d');
        new Chart(ctx, {
          type: 'bar',
          data: {
            labels,
            datasets: [{
              label: 'S·ªë l∆∞·ª£t g·ªçi',
              data: dataset,
              backgroundColor: 'rgba(63, 81, 181, 0.7)',
              borderColor: 'rgba(63, 81, 181, 1)',
              borderWidth: 1
            }]
          },
          options: {
            indexAxis: 'x',
            responsive: true,
            plugins: {
              legend: { display: false },
              tooltip: {
                callbacks: {
                  label: function(context) {
                    const value = context.parsed.x;
                    const total = dataset.reduce((a, b) => a + b, 0);
                    const percent = ((value / total) * 100).toFixed(1);
                    return `${value} l∆∞·ª£t g·ªçi (${percent}%)`;
                  }
                }
              }
            },
            scales: {
              x: {
                beginAtZero: true
              }
            }
          }
        });
      } catch (err) {
        console.error('L·ªói khi load chart m√≥n ƒÉn:', err);
      }
    }

    loadTopDishesChart();
  </script>
  <script>
    async function loadMonthlyRevenueChart() {
      try {
        const response = await fetch('/admin/api/revenue/monthly');
        const data = await response.json();

        console.log("üìä Data doanh thu th√°ng:", data); // ‚úÖ DEBUG

        const ctx = document.getElementById('monthlyRevenueChart').getContext('2d');
        new Chart(ctx, {
          type: 'line',
          data: {
            labels: data.dailyRevenue.map(r => `Ng√†y ${r.day}`),
            datasets: [{
              label: 'Doanh thu (VND)',
              data: data.dailyRevenue.map(r => r.dailyTotal),
              fill: true,
              borderColor: 'rgba(75, 192, 192, 1)',
              backgroundColor: 'rgba(75, 192, 192, 0.2)',
              tension: 0.4
            }]
          },
          options: {
            responsive: true,
            plugins: {
              legend: { position: 'top' }
            },
            scales: {
              y: { beginAtZero: true }
            }
          }
        });
      } catch (err) {
        console.error('‚ùå L·ªói load doanh thu th√°ng:', err);
      }
    }

  loadMonthlyRevenueChart();
</script>
<script>
  async function loadDailyRevenue() {
    try {
      const response = await fetch('/admin/api/revenue/daily');
      const data = await response.json();

      document.getElementById('dailyRevenue').innerText =
        data.totalRevenue.toLocaleString("vi-VN") + " VND";
      document.getElementById('dailySessions').innerText = data.totalSessions;
    } catch (err) {
      console.error('‚ùå L·ªói load doanh thu h√¥m nay:', err);
    }
  }

  loadDailyRevenue();
  </script>
</body>
</html>


