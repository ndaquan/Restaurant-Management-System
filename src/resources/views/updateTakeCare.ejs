<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/updateTakeCare.css">
</head>
<body>
    <div class="container-update-takecare">
        <h2>Cập Nhật Lịch Làm</h2>

        <% if (errorMessage) { %>
            <p class="alert-update error-update"><%= errorMessage %></p>
        <% } %>

        <form class="form-update-takecare" action="/admin/takeCare/update/<%= takeCare._id %>" method="POST" onsubmit="return validateForm()">
            
            <div class="form-group">
                <label for="staffId">Nhân Viên:</label>
                <select class="form-select-update" name="staffId" id="staffId" required>
                    <% if (staffs && staffs.length > 0) { %>
                        <% staffs.forEach(staff => { %>
                            <option value="<%= staff._id %>" 
                                    data-role="<%= staff.role %>" 
                                    <%= takeCare.staff && staff._id.toString() === takeCare.staff._id.toString() ? "selected" : "" %> >
                                <%= staff.firstName %> <%= staff.lastName %> - <%= staff.email %> (<%= staff.role %>)
                            </option>
                        <% }); %>
                    <% } else { %>
                        <option value="" disabled>Không có nhân viên nào</option>
                    <% } %>
                </select>
            </div>

            <!-- Danh sách bàn dưới dạng checkbox (ẩn mặc định) -->
            <div class="form-group" id="tableSelection" style="display: none;">
                <label>Chọn Bàn:</label>
                <div class="checkbox-group">
                    <% if (tables && tables.length > 0) { %>
                        <% tables.forEach(table => { %>
                            <label class="checkbox-label">
                                <input type="checkbox" name="tableIds" value="<%= table.idTable %>" 
                                    <%= takeCare.table.includes(table.idTable) ? "checked" : "" %> >
                                <span class="checkbox-custom"></span>
                                <%= table.idTable %>
                            </label>
                        <% }); %>
                    <% } else { %>
                        <p class="no-tables">Không có bàn nào</p>
                    <% } %>
                </div>
            </div>

            <div class="form-group">
                <label for="date">Ngày:</label>
                <input type="date" class="form-control-update" name="date" id="date" required 
                       value="<%= takeCare.date ? takeCare.date.toISOString().split('T')[0] : '' %>">
            </div>

            <div class="form-group">
                <label for="startTime">Giờ Bắt Đầu:</label>
                <input type="time" class="form-control-update" name="startTime" id="startTime" required 
                       value="<%= takeCare.startTime || '' %>">
            </div>

            <div class="form-group">
                <label for="endTime">Giờ Kết Thúc:</label>
                <input type="time" class="form-control-update" name="endTime" id="endTime" required 
                       value="<%= takeCare.endTime || '' %>">
            </div>

            <div class="button-group-update">
                <a href="/admin/takeCare" class="btn-update-cancel">Quay Lại</a>
                <button type="submit" class="btn-update-success">Lưu Thay Đổi</button>
            </div>
        </form>
    </div>

    <script>
        // Hàm kiểm tra vai trò nhân viên và hiển thị/ẩn form chọn bàn
        function toggleTableSelection() {
            const staffSelect = document.getElementById('staffId');
            const tableSelection = document.getElementById('tableSelection');
            const selectedOption = staffSelect.options[staffSelect.selectedIndex];
            const role = selectedOption ? selectedOption.getAttribute('data-role') : '';

            // Hiển thị form chọn bàn nếu vai trò là WAITER, ẩn nếu không phải
            if (role === 'WAITER') {
                tableSelection.style.display = 'block';
            } else {
                tableSelection.style.display = 'none';
                // Bỏ tick tất cả các checkbox khi vai trò không phải WAITER
                const checkboxes = document.querySelectorAll("input[name='tableIds']");
                checkboxes.forEach(checkbox => {
                    checkbox.checked = false;
                });
            }
        }

        // Hàm validate form
        function validateForm() {
            const staffSelect = document.getElementById('staffId');
            const selectedOption = staffSelect.options[staffSelect.selectedIndex];
            const role = selectedOption ? selectedOption.getAttribute('data-role') : '';

            // Kiểm tra thời gian bắt đầu và kết thúc
            const startTime = document.getElementById('startTime').value;
            const endTime = document.getElementById('endTime').value;

            // Chuyển thời gian thành giờ và phút để so sánh
            const startHours = parseInt(startTime.split(':')[0], 10);
            const startMinutes = parseInt(startTime.split(':')[1], 10);
            const endHours = parseInt(endTime.split(':')[0], 10);
            const endMinutes = parseInt(endTime.split(':')[1], 10);

            // Giới hạn thời gian từ 06:00 đến 23:00
            const minHour = 6;  // 6h sáng
            const maxHour = 23; // 23h đêm

            // Kiểm tra giờ bắt đầu
            if (startHours < minHour || (startHours === minHour && startMinutes < 0) || startHours > maxHour || (startHours === maxHour && startMinutes > 0)) {
                alert("Giờ bắt đầu phải nằm trong khoảng từ 06:00 đến 23:00. Vui lòng nhập lại.");
                return false;
            }

            // Kiểm tra giờ kết thúc
            if (endHours < minHour || (endHours === minHour && endMinutes < 0) || endHours > maxHour || (endHours === maxHour && endMinutes > 0)) {
                alert("Giờ kết thúc phải nằm trong khoảng từ 06:00 đến 23:00. Vui lòng nhập lại.");
                return false;
            }

            // Kiểm tra giờ kết thúc phải sau giờ bắt đầu
            if (startHours > endHours || (startHours === endHours && startMinutes >= endMinutes)) {
                alert("Giờ kết thúc phải sau giờ bắt đầu. Vui lòng nhập lại.");
                return false;
            }

            // Chỉ yêu cầu chọn bàn nếu vai trò là WAITER
            if (role === 'WAITER') {
                const checkboxes = document.querySelectorAll("input[name='tableIds']:checked");
                if (checkboxes.length === 0) {
                    alert("Vui lòng chọn ít nhất một bàn.");
                    return false;
                }
            }

            return true;
        }

        // Lắng nghe sự kiện thay đổi trên dropdown staffId
        document.getElementById('staffId').addEventListener('change', toggleTableSelection);

        // Gọi hàm toggleTableSelection khi trang được tải để kiểm tra nhân viên ban đầu
        document.addEventListener('DOMContentLoaded', toggleTableSelection);
    </script>
</body>
</html>