<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Menu ·∫®m Th·ª±c</title>
  <link rel="stylesheet" href="/css/menu.css">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet"/>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet"/>
</head>
<body>
  <div class="menu">
    <header class="menu-header">
      <h1>Th·ª±c ƒë∆°n</h1>
    </header>
  </div>

  <div class="container">
    <div class="search-category">
      <input class="search-input" id="search-dish" placeholder="T√¨m ki·∫øm m√≥n ƒÉn..." type="text"/>
      <div class="filter-container">
        <button class="filter-btn" onclick="toggleFilterMenu(event)">
          <i class="fas fa-filter"></i>
        </button>
        <div id="filter-menu">
          <button>M√≥n m·ªõi nh·∫•t</button>
          <button>Gi√° tƒÉng d·∫ßn</button>
          <button>Gi√° gi·∫£m d·∫ßn</button>
        </div>
      </div>
    </div>

    <div class="category-list">
      <button class="category-btn active" data-category="T·∫•t c·∫£">
        T·∫•t c·∫£ <span class="category-count"><%= totalCount %></span>
      </button>
      <% for (let category in categoryCounts) { %>
        <button class="category-btn inactive" data-category="<%= category %>">
          <%= category %> <span class="category-count"><%= categoryCounts[category] %></span>
        </button>
      <% } %>
    </div>

    <h2 class="menu-title" id="menu-title">T·∫•t c·∫£</h2>
    <div class="menu-items">
      <% if (menus && menus.length > 0) { %>
        <% menus.forEach((dish) => { %>
          <div class="menu-item" data-category="<%= dish.category?.categoryName %>">
            <div class="menu-item-image">
              <img alt="<%= dish.foodName %>" class="img-responsive" height="150" src="<%= dish.imageUrl %>" width="150"/>
            </div>
            <h3 class="menu-item-title"><%= dish.foodName %></h3>
            <div class="menu-item-info">
              <span class="menu-item-price"><%= parseFloat(dish.price.toString()).toLocaleString('vi-VN') %> VND</span>
              <span class="dish-rating">
                <% for (let i = 0; i < 5; i++) { %>
                  <i class="fas fa-star star-icon"></i>
                <% } %>
              </span>
            </div>
            <p class="menu-item-description"><%= dish.description %></p>
          </div>
        <% }) %>
      <% } else { %>
        <p>Hi·ªán kh√¥ng c√≥ m√≥n ƒÉn n√†o trong menu.</p>
      <% } %>
    </div>
  </div>

  <script>
    const categoryButtons = document.querySelectorAll('.category-btn');
    const allMenuItems = document.querySelectorAll('.menu-item');
    const menuTitle = document.getElementById('menu-title');

    categoryButtons.forEach(button => {
      button.addEventListener('click', () => {
        categoryButtons.forEach(btn => {
          btn.classList.remove('active');
          btn.classList.add('inactive');
        });
        button.classList.add('active');
        button.classList.remove('inactive');

        const selectedCategory = button.getAttribute('data-category');

        // üëá C·∫≠p nh·∫≠t ti√™u ƒë·ªÅ menu
        menuTitle.textContent = selectedCategory;

         // Hi·ªÉn th·ªã m√≥n theo category
        allMenuItems.forEach(item => {
          const itemCategory = item.getAttribute('data-category');
          item.style.display = (selectedCategory === "T·∫•t c·∫£" || itemCategory === selectedCategory) ? "" : "none";
        });
      });
    });

    document.addEventListener("DOMContentLoaded", function () {
      const searchInput = document.getElementById("search-dish");
      const menuItems = document.querySelectorAll(".menu-item"); 

      originalMenuItems = Array.from(menuItems).map(item => item.cloneNode(true));

      searchInput.addEventListener("input", function () {
        const searchValue = searchInput.value.toLowerCase();
        menuItems.forEach(item => {
          const dishName = item.querySelector(".menu-item-title").textContent.toLowerCase();
          item.style.display = dishName.includes(searchValue) ? "" : "none";
        });
      });
    });

    function toggleFilterMenu(event) {
      event.stopPropagation();
      document.getElementById('filter-menu').classList.toggle('show');
    }

    document.addEventListener('click', function(event) {
      const filterContainer = document.querySelector('.filter-container');
      if (!filterContainer.contains(event.target)) {
        document.getElementById('filter-menu').classList.remove('show');
      }
    });

    function parsePrice(priceString) {
      return parseFloat(priceString.replace(/\\./g, '').replace(' VND', ''));
    }

    function sortMenuItems(order) {
      const menuContainer = document.querySelector('.menu-items');
      const items = Array.from(menuContainer.querySelectorAll('.menu-item'));
      items.sort((a, b) => {
        const priceA = parsePrice(a.querySelector('.menu-item-price').textContent);
        const priceB = parsePrice(b.querySelector('.menu-item-price').textContent);
        return order === 'asc' ? priceA - priceB : priceB - priceA;
      });
      menuContainer.innerHTML = '';
      items.forEach(item => menuContainer.appendChild(item));
    }

    let originalMenuItems = [];
    document.getElementById('filter-menu').addEventListener('click', (event) => {
      if (event.target.tagName.toLowerCase() !== 'button') return;
      const filterButtons = document.querySelectorAll('#filter-menu button');
      filterButtons.forEach(btn => btn.classList.remove('active-filter'));
      event.target.classList.add('active-filter');
      const option = event.target.textContent.trim();
      const menuContainer = document.querySelector('.menu-items');
      if (option === 'Gi√° tƒÉng d·∫ßn') {
        sortMenuItems('asc');
      } else if (option === 'Gi√° gi·∫£m d·∫ßn') {
        sortMenuItems('desc');
      } else if (option === 'M√≥n m·ªõi nh·∫•t') {
        menuContainer.innerHTML = '';
        originalMenuItems.forEach(item => menuContainer.appendChild(item.cloneNode(true)));
      }
    });
  </script>
</body>
</html>
